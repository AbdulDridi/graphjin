{"version":3,"file":"static/js/914.3efa07ba.chunk.js","mappings":"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","sources":["../node_modules/@graphiql/react/dist/Range.es.js","../node_modules/graphql/validation/rules/custom/NoDeprecatedCustomRule.mjs","../node_modules/@graphiql/react/dist/lint.es.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nclass CharacterStream {\n  constructor(sourceText) {\n    this.getStartOfToken = () => this._start;\n    this.getCurrentPosition = () => this._pos;\n    this.eol = () => this._sourceText.length === this._pos;\n    this.sol = () => this._pos === 0;\n    this.peek = () => {\n      return this._sourceText.charAt(this._pos) ? this._sourceText.charAt(this._pos) : null;\n    };\n    this.next = () => {\n      const char = this._sourceText.charAt(this._pos);\n      this._pos++;\n      return char;\n    };\n    this.eat = (pattern) => {\n      const isMatched = this._testNextCharacter(pattern);\n      if (isMatched) {\n        this._start = this._pos;\n        this._pos++;\n        return this._sourceText.charAt(this._pos - 1);\n      }\n      return void 0;\n    };\n    this.eatWhile = (match) => {\n      let isMatched = this._testNextCharacter(match);\n      let didEat = false;\n      if (isMatched) {\n        didEat = isMatched;\n        this._start = this._pos;\n      }\n      while (isMatched) {\n        this._pos++;\n        isMatched = this._testNextCharacter(match);\n        didEat = true;\n      }\n      return didEat;\n    };\n    this.eatSpace = () => this.eatWhile(/[\\s\\u00a0]/);\n    this.skipToEnd = () => {\n      this._pos = this._sourceText.length;\n    };\n    this.skipTo = (position) => {\n      this._pos = position;\n    };\n    this.match = (pattern, consume = true, caseFold = false) => {\n      let token = null;\n      let match = null;\n      if (typeof pattern === \"string\") {\n        const regex = new RegExp(pattern, caseFold ? \"i\" : \"g\");\n        match = regex.test(this._sourceText.substr(this._pos, pattern.length));\n        token = pattern;\n      } else if (pattern instanceof RegExp) {\n        match = this._sourceText.slice(this._pos).match(pattern);\n        token = match === null || match === void 0 ? void 0 : match[0];\n      }\n      if (match != null) {\n        if (typeof pattern === \"string\" || match instanceof Array && this._sourceText.startsWith(match[0], this._pos)) {\n          if (consume) {\n            this._start = this._pos;\n            if (token && token.length) {\n              this._pos += token.length;\n            }\n          }\n          return match;\n        }\n      }\n      return false;\n    };\n    this.backUp = (num) => {\n      this._pos -= num;\n    };\n    this.column = () => this._pos;\n    this.indentation = () => {\n      const match = this._sourceText.match(/\\s*/);\n      let indent = 0;\n      if (match && match.length !== 0) {\n        const whitespaces = match[0];\n        let pos = 0;\n        while (whitespaces.length > pos) {\n          if (whitespaces.charCodeAt(pos) === 9) {\n            indent += 2;\n          } else {\n            indent++;\n          }\n          pos++;\n        }\n      }\n      return indent;\n    };\n    this.current = () => this._sourceText.slice(this._start, this._pos);\n    this._start = 0;\n    this._pos = 0;\n    this._sourceText = sourceText;\n  }\n  _testNextCharacter(pattern) {\n    const character = this._sourceText.charAt(this._pos);\n    let isMatched = false;\n    if (typeof pattern === \"string\") {\n      isMatched = character === pattern;\n    } else {\n      isMatched = pattern instanceof RegExp ? pattern.test(character) : pattern(character);\n    }\n    return isMatched;\n  }\n}\n__name(CharacterStream, \"CharacterStream\");\nclass Range {\n  constructor(start, end) {\n    this.containsPosition = (position) => {\n      if (this.start.line === position.line) {\n        return this.start.character <= position.character;\n      } else if (this.end.line === position.line) {\n        return this.end.character >= position.character;\n      } else {\n        return this.start.line <= position.line && this.end.line >= position.line;\n      }\n    };\n    this.start = start;\n    this.end = end;\n  }\n  setStart(line, character) {\n    this.start = new Position(line, character);\n  }\n  setEnd(line, character) {\n    this.end = new Position(line, character);\n  }\n}\n__name(Range, \"Range\");\nclass Position {\n  constructor(line, character) {\n    this.lessThanOrEqualTo = (position) => this.line < position.line || this.line === position.line && this.character <= position.character;\n    this.line = line;\n    this.character = character;\n  }\n  setLine(line) {\n    this.line = line;\n  }\n  setCharacter(character) {\n    this.character = character;\n  }\n}\n__name(Position, \"Position\");\nexport { CharacterStream as C, Position as P, Range as R };\n","import { invariant } from '../../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../../error/GraphQLError.mjs';\nimport { getNamedType, isInputObjectType } from '../../../type/definition.mjs';\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nexport function NoDeprecatedCustomRule(context) {\n  return {\n    Field(node) {\n      const fieldDef = context.getFieldDef();\n      const deprecationReason =\n        fieldDef === null || fieldDef === void 0\n          ? void 0\n          : fieldDef.deprecationReason;\n\n      if (fieldDef && deprecationReason != null) {\n        const parentType = context.getParentType();\n        parentType != null || invariant(false);\n        context.reportError(\n          new GraphQLError(\n            `The field ${parentType.name}.${fieldDef.name} is deprecated. ${deprecationReason}`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    Argument(node) {\n      const argDef = context.getArgument();\n      const deprecationReason =\n        argDef === null || argDef === void 0\n          ? void 0\n          : argDef.deprecationReason;\n\n      if (argDef && deprecationReason != null) {\n        const directiveDef = context.getDirective();\n\n        if (directiveDef != null) {\n          context.reportError(\n            new GraphQLError(\n              `Directive \"@${directiveDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        } else {\n          const parentType = context.getParentType();\n          const fieldDef = context.getFieldDef();\n          (parentType != null && fieldDef != null) || invariant(false);\n          context.reportError(\n            new GraphQLError(\n              `Field \"${parentType.name}.${fieldDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    ObjectField(node) {\n      const inputObjectDef = getNamedType(context.getParentInputType());\n\n      if (isInputObjectType(inputObjectDef)) {\n        const inputFieldDef = inputObjectDef.getFields()[node.name.value];\n        const deprecationReason =\n          inputFieldDef === null || inputFieldDef === void 0\n            ? void 0\n            : inputFieldDef.deprecationReason;\n\n        if (deprecationReason != null) {\n          context.reportError(\n            new GraphQLError(\n              `The input field ${inputObjectDef.name}.${inputFieldDef.name} is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    EnumValue(node) {\n      const enumValueDef = context.getEnumValue();\n      const deprecationReason =\n        enumValueDef === null || enumValueDef === void 0\n          ? void 0\n          : enumValueDef.deprecationReason;\n\n      if (enumValueDef && deprecationReason != null) {\n        const enumTypeDef = getNamedType(context.getInputType());\n        enumTypeDef != null || invariant(false);\n        context.reportError(\n          new GraphQLError(\n            `The enum value \"${enumTypeDef.name}.${enumValueDef.name}\" is deprecated. ${deprecationReason}`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { C as CodeMirror } from \"./codemirror.es.js\";\nimport { specifiedRules, NoUnusedFragmentsRule, ExecutableDefinitionsRule, KnownFragmentNamesRule, validate, Kind, LoneSchemaDefinitionRule, UniqueOperationTypesRule, UniqueTypeNamesRule, UniqueEnumValueNamesRule, UniqueFieldDefinitionNamesRule, UniqueDirectiveNamesRule, KnownTypeNamesRule, KnownDirectivesRule, UniqueDirectivesPerLocationRule, PossibleTypeExtensionsRule, UniqueArgumentNamesRule, UniqueInputFieldNamesRule, print, parse, GraphQLError, NoDeprecatedCustomRule } from \"graphql\";\nimport { o as onlineParser } from \"./types.es.js\";\nimport { C as CharacterStream, R as Range, P as Position } from \"./Range.es.js\";\nimport \"./index.es.js\";\nimport \"react\";\nimport \"react-dom\";\nconst specifiedSDLRules = [\n  LoneSchemaDefinitionRule,\n  UniqueOperationTypesRule,\n  UniqueTypeNamesRule,\n  UniqueEnumValueNamesRule,\n  UniqueFieldDefinitionNamesRule,\n  UniqueDirectiveNamesRule,\n  KnownTypeNamesRule,\n  KnownDirectivesRule,\n  UniqueDirectivesPerLocationRule,\n  PossibleTypeExtensionsRule,\n  UniqueArgumentNamesRule,\n  UniqueInputFieldNamesRule\n];\nfunction validateWithCustomRules(schema, ast, customRules, isRelayCompatMode, isSchemaDocument) {\n  const rules = specifiedRules.filter((rule) => {\n    if (rule === NoUnusedFragmentsRule || rule === ExecutableDefinitionsRule) {\n      return false;\n    }\n    if (isRelayCompatMode && rule === KnownFragmentNamesRule) {\n      return false;\n    }\n    return true;\n  });\n  if (customRules) {\n    Array.prototype.push.apply(rules, customRules);\n  }\n  if (isSchemaDocument) {\n    Array.prototype.push.apply(rules, specifiedSDLRules);\n  }\n  const errors = validate(schema, ast, rules);\n  return errors.filter((error) => {\n    if (error.message.indexOf(\"Unknown directive\") !== -1 && error.nodes) {\n      const node = error.nodes[0];\n      if (node && node.kind === Kind.DIRECTIVE) {\n        const name = node.name.value;\n        if (name === \"arguments\" || name === \"argumentDefinitions\") {\n          return false;\n        }\n      }\n    }\n    return true;\n  });\n}\n__name(validateWithCustomRules, \"validateWithCustomRules\");\nconst SEVERITY$1 = {\n  Error: \"Error\",\n  Warning: \"Warning\",\n  Information: \"Information\",\n  Hint: \"Hint\"\n};\nconst DIAGNOSTIC_SEVERITY = {\n  [SEVERITY$1.Error]: 1,\n  [SEVERITY$1.Warning]: 2,\n  [SEVERITY$1.Information]: 3,\n  [SEVERITY$1.Hint]: 4\n};\nconst invariant = /* @__PURE__ */ __name((condition, message) => {\n  if (!condition) {\n    throw new Error(message);\n  }\n}, \"invariant\");\nfunction getDiagnostics(query, schema = null, customRules, isRelayCompatMode, externalFragments) {\n  var _a, _b;\n  let ast = null;\n  if (externalFragments) {\n    if (typeof externalFragments === \"string\") {\n      query += \"\\n\\n\" + externalFragments;\n    } else {\n      query += \"\\n\\n\" + externalFragments.reduce((agg, node) => {\n        agg += print(node) + \"\\n\\n\";\n        return agg;\n      }, \"\");\n    }\n  }\n  try {\n    ast = parse(query);\n  } catch (error) {\n    if (error instanceof GraphQLError) {\n      const range = getRange((_b = (_a = error.locations) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : { line: 0, column: 0 }, query);\n      return [\n        {\n          severity: DIAGNOSTIC_SEVERITY.Error,\n          message: error.message,\n          source: \"GraphQL: Syntax\",\n          range\n        }\n      ];\n    }\n    throw error;\n  }\n  return validateQuery(ast, schema, customRules, isRelayCompatMode);\n}\n__name(getDiagnostics, \"getDiagnostics\");\nfunction validateQuery(ast, schema = null, customRules, isRelayCompatMode) {\n  if (!schema) {\n    return [];\n  }\n  const validationErrorAnnotations = mapCat(validateWithCustomRules(schema, ast, customRules, isRelayCompatMode), (error) => annotations(error, DIAGNOSTIC_SEVERITY.Error, \"Validation\"));\n  const deprecationWarningAnnotations = mapCat(validate(schema, ast, [NoDeprecatedCustomRule]), (error) => annotations(error, DIAGNOSTIC_SEVERITY.Warning, \"Deprecation\"));\n  return validationErrorAnnotations.concat(deprecationWarningAnnotations);\n}\n__name(validateQuery, \"validateQuery\");\nfunction mapCat(array, mapper) {\n  return Array.prototype.concat.apply([], array.map(mapper));\n}\n__name(mapCat, \"mapCat\");\nfunction annotations(error, severity, type) {\n  if (!error.nodes) {\n    return [];\n  }\n  const highlightedNodes = [];\n  error.nodes.forEach((node) => {\n    const highlightNode = node.kind !== \"Variable\" && \"name\" in node && node.name !== void 0 ? node.name : \"variable\" in node && node.variable !== void 0 ? node.variable : node;\n    if (highlightNode) {\n      invariant(error.locations, \"GraphQL validation error requires locations.\");\n      const loc = error.locations[0];\n      const highlightLoc = getLocation(highlightNode);\n      const end = loc.column + (highlightLoc.end - highlightLoc.start);\n      highlightedNodes.push({\n        source: `GraphQL: ${type}`,\n        message: error.message,\n        severity,\n        range: new Range(new Position(loc.line - 1, loc.column - 1), new Position(loc.line - 1, end))\n      });\n    }\n  });\n  return highlightedNodes;\n}\n__name(annotations, \"annotations\");\nfunction getRange(location, queryText) {\n  const parser = onlineParser();\n  const state = parser.startState();\n  const lines = queryText.split(\"\\n\");\n  invariant(lines.length >= location.line, \"Query text must have more lines than where the error happened\");\n  let stream = null;\n  for (let i = 0; i < location.line; i++) {\n    stream = new CharacterStream(lines[i]);\n    while (!stream.eol()) {\n      const style = parser.token(stream, state);\n      if (style === \"invalidchar\") {\n        break;\n      }\n    }\n  }\n  invariant(stream, \"Expected Parser stream to be available.\");\n  const line = location.line - 1;\n  const start = stream.getStartOfToken();\n  const end = stream.getCurrentPosition();\n  return new Range(new Position(line, start), new Position(line, end));\n}\n__name(getRange, \"getRange\");\nfunction getLocation(node) {\n  const typeCastedNode = node;\n  const location = typeCastedNode.loc;\n  invariant(location, \"Expected ASTNode to have a location.\");\n  return location;\n}\n__name(getLocation, \"getLocation\");\nconst SEVERITY = [\"error\", \"warning\", \"information\", \"hint\"];\nconst TYPE = {\n  \"GraphQL: Validation\": \"validation\",\n  \"GraphQL: Deprecation\": \"deprecation\",\n  \"GraphQL: Syntax\": \"syntax\"\n};\nCodeMirror.registerHelper(\"lint\", \"graphql\", (text, options) => {\n  const schema = options.schema;\n  const rawResults = getDiagnostics(text, schema, options.validationRules, void 0, options.externalFragments);\n  const results = rawResults.map((error) => ({\n    message: error.message,\n    severity: error.severity ? SEVERITY[error.severity - 1] : SEVERITY[0],\n    type: error.source ? TYPE[error.source] : void 0,\n    from: CodeMirror.Pos(error.range.start.line, error.range.start.character),\n    to: CodeMirror.Pos(error.range.end.line, error.range.end.character)\n  }));\n  return results;\n});\n"],"names":["__defProp","Object","defineProperty","__name","target","value","configurable","CharacterStream","sourceText","this","getStartOfToken","_start","getCurrentPosition","_pos","eol","_sourceText","length","sol","peek","charAt","next","char","eat","pattern","_testNextCharacter","eatWhile","match","isMatched","didEat","eatSpace","skipToEnd","skipTo","position","consume","caseFold","token","regex","RegExp","test","substr","slice","Array","startsWith","backUp","num","column","indentation","indent","whitespaces","pos","charCodeAt","current","character","Range","start","end","containsPosition","line","Position","lessThanOrEqualTo","NoDeprecatedCustomRule","context","Field","node","fieldDef","getFieldDef","deprecationReason","parentType","getParentType","invariant","reportError","GraphQLError","name","nodes","Argument","argDef","getArgument","directiveDef","getDirective","ObjectField","inputObjectDef","getNamedType","getParentInputType","isInputObjectType","inputFieldDef","getFields","EnumValue","enumValueDef","getEnumValue","enumTypeDef","getInputType","specifiedSDLRules","LoneSchemaDefinitionRule","UniqueOperationTypesRule","UniqueTypeNamesRule","UniqueEnumValueNamesRule","UniqueFieldDefinitionNamesRule","UniqueDirectiveNamesRule","KnownTypeNamesRule","KnownDirectivesRule","UniqueDirectivesPerLocationRule","PossibleTypeExtensionsRule","UniqueArgumentNamesRule","UniqueInputFieldNamesRule","validateWithCustomRules","schema","ast","customRules","isRelayCompatMode","isSchemaDocument","rules","specifiedRules","rule","NoUnusedFragmentsRule","ExecutableDefinitionsRule","KnownFragmentNamesRule","prototype","push","apply","validate","filter","error","message","indexOf","kind","Kind","SEVERITY$1","DIAGNOSTIC_SEVERITY","condition","Error","getDiagnostics","query","_a","_b","externalFragments","reduce","agg","print","parse","range","getRange","locations","severity","source","validateQuery","validationErrorAnnotations","mapCat","annotations","deprecationWarningAnnotations","Warning","concat","array","mapper","map","type","highlightedNodes","forEach","highlightNode","variable","loc","highlightLoc","getLocation","location","queryText","parser","onlineParser","state","startState","lines","split","stream","i","SEVERITY","TYPE","CodeMirror","text","options","validationRules","from","to"],"sourceRoot":""}